/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.QuanLy;

import BUS.HangHoaBus;
import BUS.NhaCungCapBus;
import DAO.HangHoaDAO;
import DAO.NhaCungCapDAO;
import DTO.HangHoa_DTO;
import java.awt.HeadlessException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.ButtonGroup;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author acer
 */
public class QuanLySanPham extends javax.swing.JPanel {

    /**
     * Creates new form QuanLySanPham
     */
    HangHoaDAO hhd = new HangHoaDAO();
    NhaCungCapDAO nccd = new NhaCungCapDAO();
    NhaCungCapBus nccb = new NhaCungCapBus();
    HangHoaBus hhBus = new HangHoaBus();

    public QuanLySanPham() {
        initComponents();
        createButtonGroup();
        //hiển thị sản phẩm vào table
        showProductsInTable();
    }

    public void showProductsInTable() {
        DefaultTableModel model = (DefaultTableModel) TableProducts.getModel();
        model.setRowCount(0); // Xóa tất cả dữ liệu hiện có trong bảng
        ArrayList<HangHoa_DTO> danhSachSanPham = hhd.ReadHangHoa();
        int soLuongSP = danhSachSanPham.size();
        for (int i = 0; i < soLuongSP; i++) {
            HangHoa_DTO sanPham = danhSachSanPham.get(i);
            String maSP = sanPham.getMaSP();
            String tenSP = sanPham.getTenSP();
            int soLuong = sanPham.getSoLuong();
            double giaNhap = sanPham.getGiaNhap();
            double giaBan = sanPham.getGiaBan();
            String tenNCC = nccb.timTenNCC(sanPham.getMaNCC());

            String xuatXu = sanPham.getXuatXu();
            String donVi = sanPham.getDonVi();
            boolean tt = sanPham.isTonTai();
            String tinhTrang = "";
            if (tt = true) {
                tinhTrang = "Đang bán";
            } else {
                tinhTrang = "Ngưng bán";
            }
            model.addRow(new Object[]{i + 1, maSP, tenSP, soLuong, giaNhap, giaBan, tenNCC, xuatXu, donVi, tinhTrang});
        }
        txtSoLuongSP.setEnabled(false);
    }

    public void createButtonGroup() {
        ButtonGroup arrangeGroup = new ButtonGroup();
        arrangeGroup.add(ChkArrangeByName);
        arrangeGroup.add(ChkArrangeByPrice);
    }

    public void clearALL() {
        txtMaSP.setText("");
        txtTenSP.setText("");
        txtSoLuongSP.setText("");
        txtGiaBan.setText("");
        txtGiaNhap.setText("");
        txtXuatXu.setText("");
        txtDonVi.setText("");
        cbbMaNCC.setSelectedIndex(0);
        cbbMaNhomHang.setSelectedIndex(0);
        lbImg.setIcon(new javax.swing.ImageIcon(getClass().getResource(""))); // NOI18N
        btnAdd.setEnabled(true);
        txtGiaNhap.setEnabled(true);
        txtXuatXu.setEnabled(true);
        txtDonVi.setEnabled(true);
        cbbMaNCC.setEnabled(true);
        cbbMaNhomHang.setEnabled(true);
        showProductsInTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableProducts = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        BtnArrange = new javax.swing.JButton();
        ChkArrangeByName = new javax.swing.JRadioButton();
        ChkArrangeByPrice = new javax.swing.JRadioButton();
        lbImg = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txtXuatXu = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txtGiaNhap = new javax.swing.JTextField();
        txtGiaBan = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDonVi = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        txtTenSP = new javax.swing.JTextField();
        txtSoLuongSP = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cbbMaNhomHang = new javax.swing.JComboBox<>();
        cbbMaNCC = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnUpdateTTSP = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(173, 187, 198));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("QUẢN LÝ SẢN PHẨM");

        TableProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã sản phẩm", "Tên sản phẩm", "Số lượng", "Giá nhập", "Giá bán", "Nhà cung cấp", "Xuất xứ", "Đơn vị", "Tình trạng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableProducts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableProductsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableProducts);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin sản phẩm"));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        BtnArrange.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        BtnArrange.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sorting.png"))); // NOI18N
        BtnArrange.setText("SẮP XẾP");
        BtnArrange.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnArrangeMouseClicked(evt);
            }
        });
        BtnArrange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnArrangeActionPerformed(evt);
            }
        });

        ChkArrangeByName.setText("Theo tên");

        ChkArrangeByPrice.setText("Theo giá");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ChkArrangeByPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(BtnArrange)
                        .addComponent(ChkArrangeByName, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnArrange)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ChkArrangeByName)
                .addGap(18, 18, 18)
                .addComponent(ChkArrangeByPrice)
                .addGap(14, 14, 14))
        );

        lbImg.setBackground(new java.awt.Color(255, 51, 51));
        lbImg.setMaximumSize(new java.awt.Dimension(150, 150));
        lbImg.setMinimumSize(new java.awt.Dimension(120, 120));

        jLabel27.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel27.setText("Xuất xứ ");

        jLabel30.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel30.setText("Đơn vị");

        txtGiaNhap.setMaximumSize(new java.awt.Dimension(144, 2147483647));

        txtGiaBan.setMaximumSize(new java.awt.Dimension(144, 2147483647));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setText("Giá nhập");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Giá bán");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Mã sản phẩm");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Tên sản phẩm");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("Số lượng");

        txtMaSP.setEnabled(false);
        txtMaSP.setMaximumSize(new java.awt.Dimension(144, 200));

        txtTenSP.setMaximumSize(new java.awt.Dimension(144, 144));
        txtTenSP.setMinimumSize(new java.awt.Dimension(144, 144));

        txtSoLuongSP.setMaximumSize(new java.awt.Dimension(144, 2147483647));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Nhà cung cấp");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Nhóm hàng");

        cbbMaNhomHang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chăm sóc thú cưng", "Đồ dùng gia đình", "Vệ sinh nhà cửa", "Sản phẩm cho mẹ và bé", "Chăm sóc cá nhân", "Bánh kẹo các loại", "Sữa các loại", "Bia, nước các loại", "Gạo, bột, đồ khô", "Mì, miến, cháo, phở", "Kem, thực phẩm đông mát", "Dầu ăn, nước chấm, gia vị" }));

        cbbMaNCC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Công ty TNHH Nhà Máy Bia HEINEKEN Việt Nam", "Công ty Acecook Việt Nam", "Công ty cung cấp thực phẩm", "FrieslandCampina Việt Nam" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8)
                    .addComponent(jLabel1))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtGiaBan, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGiaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSoLuongSP, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbbMaNhomHang, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(81, 81, 81)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(jLabel30))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtXuatXu, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDonVi, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(txtMaSP, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbMaNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbImg, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(14, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(txtGiaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(cbbMaNCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel6)
                                            .addComponent(txtGiaBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel27)
                                            .addComponent(txtXuatXu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel8)
                                            .addComponent(txtSoLuongSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel30)
                                    .addComponent(txtDonVi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(cbbMaNhomHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbImg, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        btnDelete.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bin.png"))); // NOI18N
        btnDelete.setText("XÓA SP");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/broom.png"))); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnUpdateTTSP.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnUpdateTTSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/updated.png"))); // NOI18N
        btnUpdateTTSP.setText("SỬA SP");
        btnUpdateTTSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateTTSPActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/loupe.png"))); // NOI18N
        btnSearch.setText("TÌM KIẾM ");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ADD.png"))); // NOI18N
        btnAdd.setText("THÊM SP MỚI");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/excel.png"))); // NOI18N
        jButton6.setText("NHẬP EXCEL");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(btnUpdateTTSP, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jButton6)
                .addGap(22, 22, 22))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdateTTSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClear)
                    .addComponent(btnAdd)
                    .addComponent(jButton6)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 989, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1007, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 8, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BtnArrangeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnArrangeMouseClicked
        // TODO add your handling code here:
        if (ChkArrangeByName.isSelected()) {
            DefaultTableModel model = (DefaultTableModel) TableProducts.getModel();
            model.setRowCount(0); // Xóa tất cả dữ liệu hiện có trong bảng
            ArrayList<HangHoa_DTO> danhSachSanPham = hhd.ReadHangHoa();
            // Sắp xếp danh sách theo tenSP bằng cách sử dụng Comparator
            Collections.sort(danhSachSanPham, new Comparator<HangHoa_DTO>() {
                @Override
                public int compare(HangHoa_DTO sp1, HangHoa_DTO sp2) {
                    return sp1.getTenSP().compareTo(sp2.getTenSP());
                }
            });
            int soLuongSP = danhSachSanPham.size();
            for (int i = 0; i < soLuongSP; i++) {
                HangHoa_DTO sanPham = danhSachSanPham.get(i);
                String maSP = sanPham.getMaSP();
                String tenSP = sanPham.getTenSP();
                int soLuong = sanPham.getSoLuong();
                double giaNhap = sanPham.getGiaNhap();
                double giaBan = sanPham.getGiaBan();
                String tenNCC = nccb.timTenNCC(sanPham.getMaNCC());
                String xuatXu = sanPham.getXuatXu();
                String donVi = sanPham.getDonVi();
                boolean tt = sanPham.isTonTai();
                String tinhTrang = "";
                if (tt = true) {
                    tinhTrang = "Đang bán";
                } else {
                    tinhTrang = "Ngưng bán";
                }
                model.addRow(new Object[]{i + 1, maSP, tenSP, soLuong, giaNhap, giaBan, tenNCC, xuatXu, donVi, tinhTrang});
            }
        }
        if (ChkArrangeByPrice.isSelected()) {
            DefaultTableModel model = (DefaultTableModel) TableProducts.getModel();
            model.setRowCount(0); // Xóa tất cả dữ liệu hiện có trong bảng
            ArrayList<HangHoa_DTO> danhSachSanPham = hhd.ReadHangHoa();
// Sắp xếp danh sách theo giaBan bằng cách sử dụng Comparator
            Collections.sort(danhSachSanPham, new Comparator<HangHoa_DTO>() {
                @Override
                public int compare(HangHoa_DTO sp1, HangHoa_DTO sp2) {
                    double giaBan1 = sp1.getGiaBan();
                    double giaBan2 = sp2.getGiaBan();
                    return Double.compare(giaBan1, giaBan2);
                }
            });

            int soLuongSP = danhSachSanPham.size();
            for (int i = 0; i < soLuongSP; i++) {
                HangHoa_DTO sanPham = danhSachSanPham.get(i);
                String maSP = sanPham.getMaSP();
                String tenSP = sanPham.getTenSP();
                int soLuong = sanPham.getSoLuong();
                double giaNhap = sanPham.getGiaNhap();
                double giaBan = sanPham.getGiaBan();
                String tenNCC = nccb.timTenNCC(sanPham.getMaNCC());
                String xuatXu = sanPham.getXuatXu();
                String donVi = sanPham.getDonVi();
                boolean tt = sanPham.isTonTai();
                String tinhTrang = "";
                if (tt = true) {
                    tinhTrang = "Đang bán";
                } else {
                    tinhTrang = "Ngưng bán";
                }
                model.addRow(new Object[]{i + 1, maSP, tenSP, soLuong, giaNhap, giaBan, tenNCC, xuatXu, donVi, tinhTrang});
            }

        }
    }//GEN-LAST:event_BtnArrangeMouseClicked

    private void TableProductsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableProductsMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) { // Đảm bảo rằng đó là một lần click đơn, bạn có thể thay đổi số click cần thiết
            int selectedRow = TableProducts.getSelectedRow();
            if (selectedRow != -1) {
                String maSP = (String) TableProducts.getValueAt(selectedRow, 1);
                ArrayList<HangHoa_DTO> danhSachHangHoa = hhd.ReadHangHoa();
                int soLuongHH = danhSachHangHoa.size();
                for (int i = 0; i < soLuongHH; i++) {
                    HangHoa_DTO sanPham = danhSachHangHoa.get(i);
                    if (maSP.equals(sanPham.getMaSP())) {
                        btnAdd.setEnabled(false);

                        txtGiaNhap.setEnabled(false);
                        txtXuatXu.setEnabled(false);
                        txtDonVi.setEnabled(false);
                        cbbMaNCC.setEnabled(false);
                        cbbMaNhomHang.setEnabled(false);
                        String Path = sanPham.getAnhSP();
                        txtMaSP.setText((String) TableProducts.getValueAt(selectedRow, 1));
                        txtTenSP.setText((String) TableProducts.getValueAt(selectedRow, 2));
                        int soLuongSP = (int) TableProducts.getValueAt(selectedRow, 3);
                        txtSoLuongSP.setText(Integer.toString(soLuongSP));
                        double giaNhap = (double) TableProducts.getValueAt(selectedRow, 4);
                        txtGiaNhap.setText(Double.toString(giaNhap));
                        double giaBan = (double) TableProducts.getValueAt(selectedRow, 5);
                        txtGiaBan.setText(Double.toString(giaBan));
                        // nhà cung cấp
                        if (sanPham.getMaNCC().equals("NCCBIAV")) {
                            cbbMaNCC.setSelectedIndex(0);
                        }
                        if (sanPham.getMaNCC().equals("NCCCOOK")) {
                            cbbMaNCC.setSelectedIndex(1);
                        }
                        if (sanPham.getMaNCC().equals("NCCDYQN")) {
                            cbbMaNCC.setSelectedIndex(2);
                        }
                        if (sanPham.getMaNCC().equals("NCCLADY")) {
                            cbbMaNCC.setSelectedIndex(3);
                        }
                        //nhóm hàng
                        if (sanPham.getMaNH().equals("0000001")) {
                            cbbMaNhomHang.setSelectedIndex(0);
                        }
                        if (sanPham.getMaNH().equals("0000002")) {
                            cbbMaNhomHang.setSelectedIndex(1);
                        }
                        if (sanPham.getMaNH().equals("0000003")) {
                            cbbMaNhomHang.setSelectedIndex(2);
                        }
                        if (sanPham.getMaNH().equals("0000004")) {
                            cbbMaNhomHang.setSelectedIndex(3);
                        }
                        if (sanPham.getMaNH().equals("0000005")) {
                            cbbMaNhomHang.setSelectedIndex(4);
                        }
                        if (sanPham.getMaNH().equals("0000006")) {
                            cbbMaNhomHang.setSelectedIndex(5);
                        }
                        if (sanPham.getMaNH().equals("0000007")) {
                            cbbMaNhomHang.setSelectedIndex(6);
                        }
                        if (sanPham.getMaNH().equals("0000008")) {
                            cbbMaNhomHang.setSelectedIndex(7);
                        }
                        if (sanPham.getMaNH().equals("0000009")) {
                            cbbMaNhomHang.setSelectedIndex(8);
                        }
                        if (sanPham.getMaNH().equals("0000010")) {
                            cbbMaNhomHang.setSelectedIndex(9);
                        }
                        if (sanPham.getMaNH().equals("0000011")) {
                            cbbMaNhomHang.setSelectedIndex(10);
                        }
                        if (sanPham.getMaNH().equals("0000012")) {
                            cbbMaNhomHang.setSelectedIndex(11);
                        }
                        txtDonVi.setText((String) TableProducts.getValueAt(selectedRow, 8));
                        txtXuatXu.setText((String) TableProducts.getValueAt(selectedRow, 7));
                        lbImg.setIcon(new javax.swing.ImageIcon(getClass().getResource(Path))); // NOI18N
                        break;
                    }
                }
            }
        }
    }//GEN-LAST:event_TableProductsMouseClicked

    private void BtnArrangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnArrangeActionPerformed
        // TODO add your handling code here:
        if (ChkArrangeByName.isSelected()) {
            DefaultTableModel model = (DefaultTableModel) TableProducts.getModel();
            model.setRowCount(0); // Xóa tất cả dữ liệu hiện có trong bảng
            ArrayList<HangHoa_DTO> danhSachHangHoa = hhd.ReadHangHoa();

            // Sắp xếp danh sách theo tenSP bằng cách sử dụng Comparator
            Collections.sort(danhSachHangHoa, new Comparator<HangHoa_DTO>() {
                @Override
                public int compare(HangHoa_DTO sp1, HangHoa_DTO sp2) {
                    return sp1.getTenSP().compareTo(sp2.getTenSP());
                }
            });

            int soLuongSP = danhSachHangHoa.size();
            for (int i = 0; i < soLuongSP; i++) {
                HangHoa_DTO sanPham = danhSachHangHoa.get(i);
                String maSP = sanPham.getMaSP();
                String tenSP = sanPham.getTenSP();
                int soLuong = sanPham.getSoLuong();
                double giaNhap = sanPham.getGiaNhap();
                double giaBan = sanPham.getGiaBan();
                String tenNCC = "abc";
                String xuatXu = sanPham.getXuatXu();
                String donVi = sanPham.getDonVi();
                model.addRow(new Object[]{i + 1, maSP, tenSP, soLuong, giaNhap, giaBan, tenNCC, xuatXu, donVi});
            }
        }
        if (ChkArrangeByPrice.isSelected()) {
            DefaultTableModel model = (DefaultTableModel) TableProducts.getModel();
            model.setRowCount(0); // Xóa tất cả dữ liệu hiện có trong bảng
            ArrayList<HangHoa_DTO> danhSachHangHoa = hhd.ReadHangHoa();

// Sắp xếp danh sách theo giaBan bằng cách sử dụng Comparator
            Collections.sort(danhSachHangHoa, new Comparator<HangHoa_DTO>() {
                @Override
                public int compare(HangHoa_DTO sp1, HangHoa_DTO sp2) {
                    double giaBan1 = sp1.getGiaBan();
                    double giaBan2 = sp2.getGiaBan();
                    return Double.compare(giaBan1, giaBan2);
                }
            });

            int soLuongSP = danhSachHangHoa.size();
            for (int i = 0; i < soLuongSP; i++) {
                HangHoa_DTO sanPham = danhSachHangHoa.get(i);
                String maSP = sanPham.getMaSP();
                String tenSP = sanPham.getTenSP();
                int soLuong = sanPham.getSoLuong();
                double giaNhap = sanPham.getGiaNhap();
                double giaBan = sanPham.getGiaBan();
                String tenNCC = "abc";
                String xuatXu = sanPham.getXuatXu();
                String donVi = sanPham.getDonVi();
                model.addRow(new Object[]{i + 1, maSP, tenSP, soLuong, giaNhap, giaBan, tenNCC, xuatXu, donVi});
            }

        }
    }//GEN-LAST:event_BtnArrangeActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        String maSP = txtMaSP.getText();
        String tenSP = txtTenSP.getText();
        String donVi = txtDonVi.getText();
        String gn = txtGiaNhap.getText();
        String gb = txtGiaBan.getText();
        String xuatXu = txtXuatXu.getText();
        if (maSP.equals("") || tenSP.equals("") || donVi.equals("") || xuatXu.equals("") || gn.equals("") || gb.equals("")) {
            JOptionPane.showMessageDialog(null,
                    "Chưa đủ thông tin sản phẩm để thêm mới");
            return;
        }
        int soLuong = 0;
        double giaNhap = Double.parseDouble(txtGiaNhap.getText());
        double giaBan = Double.parseDouble(txtGiaBan.getText());
        try {
            // Lấy dữ liệu từ JTextField
            String a = txtGiaNhap.getText();
            String b = txtGiaBan.getText();
            // Thử chuyển đổi dữ liệu thành kiểu double
            double value = Double.parseDouble(a);
            double valueb = Double.parseDouble(b);
            return;
            // Nếu chuyển đổi thành công, thực hiện các hành động với giá trị kiểu double ở đây
        } catch (NumberFormatException e) {
            // Xử lý khi dữ liệu không thể chuyển đổi thành kiểu double
            JOptionPane.showMessageDialog(null, "Dữ liệu không hợp lệ. Hãy nhập một số kiểu double.", "Lỗi", JOptionPane.ERROR_MESSAGE);

        }

        String maNCC = "";
        int indexMaNCC = cbbMaNCC.getSelectedIndex();
        if (indexMaNCC == 0) {
            maNCC = "NCCBIAV";
        }
        if (indexMaNCC == 1) {
            maNCC = "NCCCOOK";
        }
        if (indexMaNCC == 2) {
            maNCC = "NCCDYQN";
        }
        if (indexMaNCC == 3) {
            maNCC = "NCCLADY";
        }
        String maNH = "";
        int indexMaNH = cbbMaNhomHang.getSelectedIndex();
        if (indexMaNH == 0) {
            maNH = "0000001";
        }
        if (indexMaNH == 1) {
            maNH = "0000002";
        }
        if (indexMaNH == 2) {
            maNH = "0000003";
        }
        if (indexMaNH == 3) {
            maNH = "0000004";
        }
        if (indexMaNH == 4) {
            maNH = "0000005";
        }
        if (indexMaNH == 5) {
            maNH = "0000006";
        }
        if (indexMaNH == 6) {
            maNH = "0000007";
        }
        if (indexMaNH == 7) {
            maNH = "0000008";
        }
        if (indexMaNH == 8) {
            maNH = "0000009";
        }
        if (indexMaNH == 9) {
            maNH = "0000010";
        }
        if (indexMaNH == 10) {
            maNH = "0000011";
        }
        if (indexMaNH == 11) {
            maNH = "0000012";
        }
        hhBus.themHH(maSP, tenSP, maNH, maNCC, donVi, giaNhap, giaBan, soLuong, xuatXu, true);
        showProductsInTable();
        clearALL();

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        String tenSP = txtTenSP.getText();
        int dialogResult = JOptionPane.showConfirmDialog(null, "Bạn muốn xóa sản phẩm " + tenSP + "?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (dialogResult == JOptionPane.YES_OPTION) {
            String maSP = txtMaSP.getText();
            try {
                hhBus.xoaHangHoa(maSP);
                JOptionPane.showMessageDialog(null,
                        "Xóa hàng hóa thành công");
                showProductsInTable();
                clearALL();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,
                        "Xóa hàng hóa thất bại");
            }
        } else {
            return;
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clearALL();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnUpdateTTSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateTTSPActionPerformed
        // TODO add your handling code here:

        String msp = txtMaSP.getText();
        String tsp = txtTenSP.getText();
        String xx = txtXuatXu.getText();
        double giaNhap = Double.parseDouble(txtGiaNhap.getText());
        double giaBan = Double.parseDouble(txtGiaBan.getText());
        int indexMaNCC = cbbMaNCC.getSelectedIndex();
        String maNCC = "";
        if (indexMaNCC == 0) {
            maNCC = "NCCBIAV";
        }
        if (indexMaNCC == 1) {
            maNCC = "NCCCOOK";
        }
        if (indexMaNCC == 2) {
            maNCC = "NCCDYQN";
        }
        if (indexMaNCC == 3) {
            maNCC = "NCCLADY";
        }
        int dialogResult = JOptionPane.showConfirmDialog(null, "Bạn muốn sửa sản phẩm này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (dialogResult == JOptionPane.YES_OPTION) {

            try {
                hhBus.suaHangHoa(msp, tsp, maNCC, giaNhap, giaBan, xx);
                showProductsInTable();
                JOptionPane.showMessageDialog(null,
                        "Sửa sản phẩm thành công");

                clearALL();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,
                        "Xóa hàng hóa thất bại");
            }
        } else {
            return;
        }

    }//GEN-LAST:event_btnUpdateTTSPActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
//         return dao.searchHangHoa(maHH, tenSP, maNH, xuatXu);
        String msp = txtMaSP.getText();
        String tsp = txtTenSP.getText();
        String xx = txtXuatXu.getText();
        double gb = Double.parseDouble(txtGiaBan.getText());
        String maNH = "";
        int indexMaNH = cbbMaNhomHang.getSelectedIndex();
        if (indexMaNH == 0) {
            maNH = "0000001";
        }
        if (indexMaNH == 1) {
            maNH = "0000002";
        }
        if (indexMaNH == 2) {
            maNH = "0000003";
        }
        if (indexMaNH == 3) {
            maNH = "0000004";
        }
        if (indexMaNH == 4) {
            maNH = "0000005";
        }
        if (indexMaNH == 5) {
            maNH = "0000006";
        }
        if (indexMaNH == 6) {
            maNH = "0000007";
        }
        if (indexMaNH == 7) {
            maNH = "0000008";
        }
        if (indexMaNH == 8) {
            maNH = "0000009";
        }
        if (indexMaNH == 9) {
            maNH = "0000010";
        }
        if (indexMaNH == 10) {
            maNH = "0000011";
        }
        if (indexMaNH == 11) {
            maNH = "0000012";
        }
        String maNCC = "";
        int indexMaNCC = cbbMaNCC.getSelectedIndex();
        if (indexMaNCC == 0) {
            maNCC = "NCCBIAV";
        }
        if (indexMaNCC == 1) {
            maNCC = "NCCCOOK";
        }
        if (indexMaNCC == 2) {
            maNCC = "NCCDYQN";
        }
        if (indexMaNCC == 3) {
            maNCC = "NCCLADY";
        }
        ArrayList<HangHoa_DTO> danhSachSearchHH = hhBus.timHangHoa(msp, tsp, maNH, gb, xx);
        System.out.println(danhSachSearchHH);
        DefaultTableModel model = (DefaultTableModel) TableProducts.getModel();
        model.setRowCount(0); // Xóa tất cả dữ liệu hiện có trong bảng
        int soLuongSP = danhSachSearchHH.size();
        for (int i = 0; i < soLuongSP; i++) {
            HangHoa_DTO sanPham = danhSachSearchHH.get(i);
            String maSP = sanPham.getMaSP();
            String tenSP = sanPham.getTenSP();
            int soLuong = sanPham.getSoLuong();
            double giaNhap = sanPham.getGiaNhap();
            double giaBan = sanPham.getGiaBan();
            String tenNCC = nccb.timTenNCC(sanPham.getMaNCC());

            String xuatXu = sanPham.getXuatXu();
            String donVi = sanPham.getDonVi();
            boolean tt = sanPham.isTonTai();
            String tinhTrang = "";
            if (tt = true) {
                tinhTrang = "Đang bán";
            } else {
                tinhTrang = "Ngưng bán";
            }
            model.addRow(new Object[]{i + 1, maSP, tenSP, soLuong, giaNhap, giaBan, tenNCC, xuatXu, donVi, tinhTrang});
        }
    }//GEN-LAST:event_btnSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnArrange;
    private javax.swing.JRadioButton ChkArrangeByName;
    private javax.swing.JRadioButton ChkArrangeByPrice;
    private javax.swing.JTable TableProducts;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdateTTSP;
    private javax.swing.JComboBox<String> cbbMaNCC;
    private javax.swing.JComboBox<String> cbbMaNhomHang;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbImg;
    private javax.swing.JTextField txtDonVi;
    private javax.swing.JTextField txtGiaBan;
    private javax.swing.JTextField txtGiaNhap;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtSoLuongSP;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtXuatXu;
    // End of variables declaration//GEN-END:variables
}
