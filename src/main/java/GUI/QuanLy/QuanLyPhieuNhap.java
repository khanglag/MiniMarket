/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.QuanLy;

import BUS.PhieuNhapBus;
import DTO.PhieuNhap_DTO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author acer
 */
import java.awt.Color;
import java.awt.Component;
import javax.swing.AbstractCellEditor;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableCellEditor;

public class QuanLyPhieuNhap extends javax.swing.JPanel {

    PhieuNhapBus pnBus = new PhieuNhapBus();

    public QuanLyPhieuNhap() {
        initComponents();
        showReceiptInTable();
    }

    public void showReceiptInTable() {
        try {
            TableActionEvent event = new TableActionEvent() {
                @Override
                public void onStatus(int row, String MaPhieuNhap) {
                    System.out.println("Trạng thái " + row + MaPhieuNhap);
                }

                @Override
                public void onRead(int row, String MaPhieuNhap) {
                    JFrame frame = new JFrame("Thông tin phiếu yêu cầu nhập hàng");
                    ReadPhieuYeuCauNhap read = new ReadPhieuYeuCauNhap();
                    read.MaPN(MaPhieuNhap);
                    frame.add(read); 
                    frame.setSize(800, 600); 
                    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                    frame.setLocationRelativeTo(null);
                    frame.setVisible(true);
                }
            };

            ArrayList<PhieuNhap_DTO> danhSachPhieuNhap = pnBus.rPhieuNhap_DTOs();
            int soLuongPhieuNhap = danhSachPhieuNhap.size();
            DefaultTableModel model = (DefaultTableModel) tablePhieuNhap.getModel();
            model.setRowCount(0); // Xóa tất cả dữ liệu hiện có trong bảng
            for (int i = 0; i < soLuongPhieuNhap; i++) {
                PhieuNhap_DTO phieuNhap = danhSachPhieuNhap.get(i);
                String maPN = phieuNhap.getMaPhieuNhap();
                String maNV = phieuNhap.getMaNV();
                LocalDate tgNhap = phieuNhap.getThoiGianLap();
                double VAT = phieuNhap.getVAT();
                int soMH = phieuNhap.getSoMatHang();
                double tongTien = phieuNhap.getTongTien();
                String tt = phieuNhap.getTrangThai();
                tablePhieuNhap.getColumnModel().getColumn(7).setCellRenderer(new TableActionCellRender());
                tablePhieuNhap.getColumnModel().getColumn(7).setCellEditor(new TableActionCellEditor(event));
                model.addRow(new Object[]{i + 1, maPN, maNV, tgNhap, VAT, soMH, tongTien});
                tablePhieuNhap.getColumnModel().getColumn(7).setPreferredWidth(130);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Lỗi khi đọc dữ liệu Phiếu Nhập !!!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnCheckNhapHang = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePhieuNhap = new javax.swing.JTable();

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(173, 187, 198));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("QUẢN LÝ PHIẾU NHẬP");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Thông báo yêu cầu nhập hàng từ thủ kho");

        btnCheckNhapHang.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnCheckNhapHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/test.png"))); // NOI18N
        btnCheckNhapHang.setText("KIỂM TRA");
        btnCheckNhapHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckNhapHangActionPerformed(evt);
            }
        });

        tablePhieuNhap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã phiếu nhập", "Mã nhân viên", "Thời gian lập ", "VAT", "Số mặt hàng", "Tổng tiền", "Trạng thái"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablePhieuNhap.setRowHeight(50);
        tablePhieuNhap.setRowMargin(10);
        tablePhieuNhap.setSelectionBackground(new java.awt.Color(51, 255, 51));
        jScrollPane1.setViewportView(tablePhieuNhap);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1039, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(btnCheckNhapHang)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCheckNhapHang))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCheckNhapHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckNhapHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCheckNhapHangActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheckNhapHang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablePhieuNhap;
    // End of variables declaration//GEN-END:variables
}

class ButtonRenderer extends DefaultTableCellRenderer {

    private JButton button;
    private String buttonName;

    public ButtonRenderer(Color color, String name) {
        button = new JButton(name);
        button.setOpaque(true);
        button.setBackground(color);
        buttonName = name;

        // Thêm ActionListener cho nút
        button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println("Button Clickedxxxx: " + buttonName);
            }
        });
    }

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        return button;
    }
}

class ButtonEditor extends AbstractCellEditor implements TableCellEditor {

    private JButton button;
    private String buttonName;

    public ButtonEditor(Color color, String name) {
        button = new JButton(name);
        button.setOpaque(true);
        button.setBackground(color);
        buttonName = name;

        // Thêm ActionListener cho nút
        button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println("Button Clickedaaaa: " + buttonName);
            }
        });
    }

    @Override
    public Object getCellEditorValue() {
        return buttonName;
    }

    @Override
    public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
        return button;
    }
}
